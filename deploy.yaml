#!ansible-playbook
---
# ----------------------------------------------------
- name: Create cloud resources (and wait for them to be ready)
  hosts: localhost
  gather_facts: false
  roles:
    - role: terraform
  tags: ["terraform", "cloud"]
  post_tasks:
    - name: Remove existing SSH key entries for the cloud instances machine
      shell: "ssh-keygen -R {{ hostvars[item]['ansible_ssh_host'] }}"
      ignore_errors: True
      changed_when: False
      with_items: "{{ groups.all }}"

- name: Wait during nodes to be available
  hosts: all
  gather_facts: false
  user: ubuntu
  tasks:
    - name: Wait for SSH connectivity
      wait_for_connection:
        timeout: 1800

# ----------------------------------------------------
- name: Manage SSH known_hosts file on local host
  hosts: localhost
  connection: local
  ignore_errors: true
  roles:
    - role: ssh-keys
  tags: ["ssh"]

# ----------------------------------------------------
- name: Wait for nodes to finish cloud init
  hosts: all
  gather_facts: False
  user: ubuntu
  tags: ["cloud"]
  roles:
    - role: wait-cloud-init-done

- name: Delete resources for failed hosts
  hosts: localhost
  roles:
    - role: delete-failed
      vars: { "required_key": "cloud_init_success" }

#-------------------------------------------------------
- name: Configure password-based login for user root
  hosts: all
  user: root
  become: True
  become_user: root
  roles:
    - role: allow-password
      when: enable_password_login_for_user_root == True

- name: Delete resources for failed hosts
  hosts: localhost
  roles:
    - role: delete-failed
      vars: { "required_key": "allow_password_success" }
      when: enable_password_login_for_user_root == True

# ----------------------------------------------------
- name: Install microk8s
  hosts: all
  user: root
  become: True
  become_user: root
  roles:
    - role: microk8s

- name: Delete resources for failed hosts
  hosts: localhost
  roles:
    - role: delete-failed
      vars: { "required_key": "microk8s_success" }

# ----------------------------------------------------
- name: Fix permissions of kubeconf file(s)
  hosts: localhost
  connection: local
  tasks:
    - name: Change permissions
      ansible.builtin.file:
        path: "{{item}}"
        mode: "0600"
      with_fileglob:
        - "{{generated_kubeconf_file_prefix}}*{{ generated_kubeconf_file_suffix }}"
