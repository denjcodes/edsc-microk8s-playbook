---
# ----------------------------------------------------
# Create OpenStack resources cluster and wait for cloud init to finish
# ----------------------------------------------------
- name: Create OpenStack resources cluster
  hosts: localhost
  gather_facts: false
  roles:
    - role: openstack

- name: Wait for nodes to be ready
  hosts: all
  gather_facts: False
  tags:
    - openstack
  tasks:
    - name: Wait during nodes boot
      wait_for:
        host: "{{ansible_ssh_host}}"
        port: 22
        connect_timeout: 20
        timeout: 600
        search_regex: OpenSSH
      vars:
        ansible_connection: local

# ----------------------------------------------------
# Scan SSH keys
# ----------------------------------------------------

- name: SSH keys
  hosts: localhost
  connection: local
  tags:
    - openstack
  roles:
    - role: ssh-keys

# ----------------------------------------------------
# Wait for nodes to be ready
# ----------------------------------------------------

- name: Wait for nodes to be ready
  hosts: all
  gather_facts: False
  tags:
    - openstack
  tasks:
    - name: Wait for cloud-init to finish
      raw: while ! test -f /var/lib/cloud/instance/boot-finished; do sleep 1; done
      retries: 5
      delay: 1
      changed_when: False
      tags:
        - skip_ansible_lint

    - name: Symlink /usr/bin/python -> /usr/bin/python3
      raw: |
        if [ -f /usr/bin/python3 ] && [ ! -f /usr/bin/python ]; then
          ln --symbolic /usr/bin/python3 /usr/bin/python; 
        fi
      become: true


#-------------------------------------------------------
# Configure password-based login for user ubuntu
#-------------------------------------------------------

    - name: Allow password-based login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no$"
        line: "PasswordAuthentication yes"
        owner: root
        group: root
      become: true
      when: enable_password_login_for_user_ubuntu == True

    - name: Change Password for user ubuntu
      user: name=ubuntu password="{{ password_for_user_ubuntu | password_hash('sha512', 'saltdfjalsdf') }}" update_password=always
      become: true
      when: enable_password_login_for_user_ubuntu == True

    - name: Restart sshd
      service:
        name: ssh
        state: restarted
      become: true

# ----------------------------------------------------
# Install microk8s
# ----------------------------------------------------

- name: Install microk8s
  hosts: all
  user: ubuntu
  become: yes
  become_user: root
  tags:
    - base
  roles:
    - role: microk8s

# ----------------------------------------------------
# Fix permissions of kubeconf file
# ----------------------------------------------------

- name: Fix permissions of kubeconf file
  hosts: localhost
  connection: local
  tasks:
  - name: Download kubeconf
    ansible.builtin.file:
      path: "{{generated_kubeconf_file}}"
      mode: '0600'

# ----------------------------------------------------
# Install addons
# ----------------------------------------------------

- name: Install addons
  hosts: all
  user: ubuntu
  become: yes
  become_user: root
  roles:
    - role: microk8s-addons
