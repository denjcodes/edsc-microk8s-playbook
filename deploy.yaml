#!ansible-playbook
---
# ----------------------------------------------------
- name: Create cloud resources (and wait for them to be ready)
  hosts: localhost
  gather_facts: false
  roles:
    - role: terraform
  tags: ["terraform", "cloud"]

# ----------------------------------------------------
- name: Manage SSH known_hosts file on local host
  hosts: localhost
  connection: local
  roles:
    - role: ssh-keys
  tags: ["ssh"]

# ----------------------------------------------------
- name: Wait for nodes to finish cloud init
  hosts: all
  gather_facts: False
  user: ubuntu
  tags: ["cloud"]
  tasks:
    - name: Wait for cloud-init to finish
      raw: while ! test -f /var/lib/cloud/instance/boot-finished; do sleep 1; done
      retries: 5
      delay: 1
      changed_when: False

#-------------------------------------------------------
- name: Configure password-based login for user ubuntu
  hosts: all
  user: ubuntu
  become: True
  become_user: root
  roles:
    - role: allow-password

# ----------------------------------------------------
- name: Install microk8s
  hosts: all
  user: ubuntu
  become: True
  become_user: root
  roles:
    - role: microk8s

# ----------------------------------------------------
- name: Fix permissions of kubeconf file(s)
  hosts: localhost
  connection: local
  tasks:
    - name: Change permissions
      ansible.builtin.file:
        path: "{{item}}"
        mode: "0600"
      with_fileglob:
        - "{{generated_kubeconf_file_prefix}}*{{ generated_kubeconf_file_suffix }}"
#- name: Delete failed hosts
#  #ansible.builtin.debug:
#  #  msg: "Deleting index {{ idx }} ({{ item[0] }})"
#  terraform:
#    force_init: yes
#    project_path: "{{ terraform_folder }}"
#    state: "absent" # present / planned / absent
#    targets: "openstack_compute_instance_v2.openstack_instances[{{ idx }}]"
#  when: item[1] == True
#  loop: "{{ cloud_create_result }}"
#  loop_control:
#    index_var: idx

- name: Failed hosts
  hosts: localhost
  tasks:
    - debug:
        msg: "{{hostvars}}"
