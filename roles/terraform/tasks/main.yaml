- name: Ensure terraform folder exists
  ansible.builtin.file:
    path: "{{ terraform_folder }}"
    state: directory

- name: Set userdata value
  set_fact:
    userdata_value: |
      #cloud-config
      package_upgrade: true
      hostname: "{{ nodes_name }}"
      manage_etc_hosts: false
      packages:
        - python3
        - apt-transport-https

- name: Generate terraform file
  template:
    src: files/terraform-template.tf.j2
    dest: "{{ terraform_folder }}/terraform-resources.tf"

- name: Generate terraform inventory template file
  template:
    src: files/terraform-inventory.tmpl.j2
    dest: "{{ terraform_folder }}/terraform-inventory.tm

- name: Run generated terraform script
  terraform:
    force_init: yes
    project_path: "{{ terraform_folder }}"
    state: "present" # present / planned / absent
    lock: false
  register: terraform_result

- name: Load inventory yaml generated by terraform into a variable
  include_vars:
    file: "{{ terraform_folder }}/openstack-inventory.txt"
    name: terraform_inventory

- name: Output terraform_inventory # { "all": { "hosts": { "microk8s-host-0": { "ansible_host": "141.72.189.96", "openstack_id": "4990...510e" },
  debug:
    msg: "{{ terraform_inventory  }}"

- name: Add terraform hosts to dynamic inventory
  ansible.builtin.add_host:
    hostname: "{{ item.key }}"
    ansible_ssh_host: "{{item.value.ansible_host}}"
  loop: "{{terraform_inventory.all.hosts | dict2items}}"
  changed_when: False
